openapi: 3.0.0
info:
  version: '2.2.0'
  title: Kytos Circuit Provisioning
  description: Kytos NApp for provisioning of SDN circuits.
servers:
  - url: http://localhost:8181/api/kytos/mef_eline
    description: Local server (uses test data)
paths:
  /v2/evc/:
    post:
      summary: Creates a new circuit
      operationId: create_circuit
      requestBody:
        description: Creates a new circuit based on the endpoints and constraints given.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCircuit'
      responses:
        '200':
          description: OK
  /v2/evc/{circuit_id}:
    get:
      summary: Get details of a circuit
      description: Show the details of a single circuit
      produces:
        - applications/json
      parameters:
        - name: circuit_id
          in: path
          required: true
          type: integer
      tags:
        - Future
      responses:
        '200':
          description: OK
definitions:
  NewCircuit:
    type: object
    required:
      - uni_a
      - uni_z
    properties:
      uni_a:
        $ref: '#/definitions/Endpoint'
      uni_z:
        $ref: '#/definitions/Endpoint'
      start_date:
        type: string
        format: date-time
      end_date:
        type: string
        format: date-time
      bandwidth:
        type: integer
        format: int64
      links:
        type: array
        items:
          type: string
      backup_links:
        type: array
        items:
          type: string
  Endpoint:
    type: object
    required:
      - dpid
      - port
    properties:
      dpid:
        type: string
        format: '00:00:00:00:00:00:00:00'
      port:
        type: string
      tag:
        $ref: '#/definitions/Tag'
  Link:
    type: object
    required:
      - id
      - endpoint_a
      - endpoint_b
    properties:
      id:
        type: string
      endpoint_a:
        $ref: '#/definitions/Endpoint'
      endpoint_b:
        $ref: '#/definitions/Endpoint'
  Path:
    type: object
    required:
      - endpoints
    properties:
      id:
        type: integer
        format: int32
      endpoints:
        type: array
        items:
          $ref: '#/definitions/Endpoint'
  Circuit:
    type: object
    required:
      - id
      - name
      - path
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      path:
        $ref: '#/definitions/Path'
      backup:
        $ref: '#/definitions/Path'
      start_date:
        type: string
        format: date-time
      end_date:
        type: string
        format: date-time
  Tag:
    type: object
    required:
      - type
      - value
    properties:
      type:
        type: string
      value:
        type: string
